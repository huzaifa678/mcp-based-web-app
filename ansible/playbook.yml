---
- hosts: app
  become: true
  vars:
    ecr_repo: "533267178572.dkr.ecr.us-east-1.amazonaws.com/mcp-proj-repo:latest"
    app_service_name: "mcp-app"
    react_dir: "/var/www/html"

  tasks:
    - name: Install required packages
      apt:
        name:
          - docker.io
          - apache2
          - unzip
          - curl
        state: present
        update_cache: yes

    - name: Install AWS CLI v2
      shell: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip -o awscliv2.zip
        ./aws/install
      args:
        creates: /usr/local/bin/aws

    - name: Start Docker and Apache
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - docker
        - apache2

    - name: Login to AWS ECR
      shell: |
        aws ecr get-login-password --region us-east-1 | \
        docker login --username AWS --password-stdin 533267178572.dkr.ecr.us-east-1.amazonaws.com

    - name: Pull latest Docker image from ECR
      shell: docker pull {{ ecr_repo }}

    - name: Run Docker container
      shell: |
        docker run -d --name {{ app_service_name }} \
        -p 8000:80 \
        {{ ecr_repo }}

    - name: Create systemd service for app container
      copy:
        dest: /etc/systemd/system/{{ app_service_name }}.service
        content: |
          [Unit]
          Description=MCP App Container Service
          After=docker.service
          Requires=docker.service

          [Service]
          Restart=always
          ExecStart=/usr/bin/docker start -a {{ app_service_name }}
          ExecStop=/usr/bin/docker stop -t 10 {{ app_service_name }}

          [Install]
          WantedBy=multi-user.target

    - name: Enable and start systemd service
      shell: |
        systemctl daemon-reload
        systemctl enable {{ app_service_name }}
        systemctl start {{ app_service_name }}

    - name: Copy React frontend build
      copy:
        src: "{{ playbook_dir }}/../frontend/build/"
        dest: "{{ react_dir }}/"
        owner: www-data
        group: www-data
        mode: '0755'
      notify:
        - Restart Apache

  handlers:
    - name: Restart Apache
      service:
        name: apache2
        state: restarted
