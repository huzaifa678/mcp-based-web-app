name: Terraform & AWS ECR Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main 

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    outputs:
      EC2_PUBLIC_IP: ${{ steps.tf-output.outputs.EC2_PUBLIC_IP }}
      EC2_PRIVATE_KEY: ${{ steps.tf-output.outputs.EC2_PRIVATE_KEY }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0  

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 
      
      - name: Initialize Terraform
        run: terraform init
        working-directory: ./terraform
        

      - name: Terraform Plan
        run: |
          terraform plan \
          -out=tfplan
        working-directory: ./terraform

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve tfplan
        working-directory: ./terraform

      - name: Export Terraform Output
        id: tf-output
        run: |
          echo "EC2_PUBLIC_IP=$(terraform output -raw instance_public_ip)" >> $GITHUB_OUTPUT
          echo "EC2_PRIVATE_KEY<<EOF" >> $GITHUB_OUTPUT
          terraform output -raw private_key_pem >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        working-directory: ./terraform

  docker:
    name: Build & Push Docker Image to ECR
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Load secrets and save to app.env
        run: aws secretsmanager get-secret-value --secret-id mcp-app-credentials --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > .env

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: mcp-proj-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:latest


  ansible:
    name: Configure EC2 with Ansible
    runs-on: ubuntu-latest
    needs:
      - terraform
      - docker
    env:
      EC2_PUBLIC_IP: ${{ needs.terraform.outputs.EC2_PUBLIC_IP }}
      EC2_PRIVATE_KEY: ${{ needs.terraform.outputs.EC2_PRIVATE_KEY }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ needs.terraform.outputs.EC2_PRIVATE_KEY }}" > ~/.ssh/private_key.pem
          chmod 600 ~/.ssh/private_key.pem

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Wait for SSH to be ready
        run: |
          for i in {1..10}; do
            nc -zv "$EC2_PUBLIC_IP" 22 && break
            echo "Waiting for SSH..."
            sleep 10
          done

      - name: Create Ansible inventory
        run: |
          echo "[app]" > inventory
          echo "$EC2_PUBLIC_IP" >> inventory
        working-directory: ./ansible

      - name: Run Ansible Playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
        run: |
          ansible-playbook -i inventory playbook.yml --private-key ~/.ssh/private_key.pem -u ubuntu -vvv
        working-directory: ./ansible
